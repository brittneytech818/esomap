---
import HeaderNav from "@/components/HeaderNav.astro";
import HeaderMeta from "@/components/HeaderMeta.astro";
import Footer from "@/components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION, ESO_API_URL } from "@/consts";

const response = await fetch(`${ESO_API_URL}/api/server-status`);
const { data } = await response.json();

const servers = Object.entries(data.attributes.servers).map(([key, value]) => {
  const [platform, zone] = key.split("-");
  return {
    slug: key.toLowerCase(),
    platform: getPlatformName(platform),
    zone: getZoneName(zone),
    status: value as boolean,
    updatedAt: data.attributes.updatedAt,
  };
});

if (Astro.request.headers.get("Content-Type") === "application/json") {
  return new Response(JSON.stringify(servers), {
    headers: {
      "Content-Type": "application/json",
    },
  });
}

function getZoneName(code: string) {
  switch (code) {
    case "EU":
      return "欧服";
    case "NA":
      return "美服";
    case "PTS":
      return "测试服";
    default:
      return "未知";
  }
}

function getPlatformName(code: string) {
  switch (code) {
    case "PC":
      return "PC/Mac";
    case "XBOX":
      return "Xbox";
    case "PS4":
      return "PlayStation";
    default:
      return "未知";
  }
}

function getStatusName(online: boolean) {
  return online ? "在线" : "离线";
}

function getStatusColor(online: boolean) {
  return online ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800";
}
---

<html lang="zh-CN">
  <head>
    <HeaderMeta
      title={`服务器状态 - ${SITE_TITLE}`}
      description={SITE_DESCRIPTION}
    />
  </head>

  <body class="h-screen flex flex-col">
    <HeaderNav />

    <main class="flex-1 mx-auto max-w-3xl w-full">
      <h1 class="text-3xl mt-5 font-bold tracking-tight text-center">
        上古卷轴OL服务器状态
      </h1>
      <ul
        role="list"
        class="mt-10 w-full divide-y divide-gray-200 rounded-md border border-gray-200"
      >
        {
          servers
            .sort((x, y) => x.platform.localeCompare(y.platform))
            .map((x) => {
              return (
                <li class="flex items-center justify-between py-3 pl-3 pr-4 text-sm">
                  <div class="flex w-0 flex-1 items-center">
                    <span class="ml-2 w-0 flex-1">
                      {x.platform} ({x.zone})
                    </span>
                  </div>
                  <div class="ml-4 flex-shrink-0">
                    <span
                      class={`font-medium inline-block px-2.5 py-1 rounded-full leading-none ${getStatusColor(
                        x.status
                      )}`}
                    >
                      {getStatusName(x.status)}
                    </span>
                  </div>
                </li>
              );
            })
        }
      </ul>
    </main>
    <Footer />
  </body>
</html>
